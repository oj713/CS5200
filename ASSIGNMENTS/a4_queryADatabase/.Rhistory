14,
14,
13,
13,
13,
7 ,
4,
4,
4,
2,
2,
1,
0))
df <- data.frame(x = 1:17, nx = c(
82,
42,
25,
17,
14,
14,
13,
13,
13,
7 ,
4,
4,
4,
2,
2,
1,
0))
df
df <- df |>
mutate(lognx = log(nx))
df
round(df$lognx, 3)
ggplot(df, aes(x = x, y = lognx)) + geom_line()
ggplot(df, aes(x = x, y = lognx)) + geom_line() +
ggtitle("1975 cohort of G. scandens") +
labs(x = "Age Group", y = "Log(Nx)")
c(1.000,
0.529,
0.294,
0.294,
0.235,
0.235,
0.235,
0.235,
0.235,
0.118,
0.059,
0.059,
0.059)
c(1.000,
0.529,
0.294,
0.294,
0.235,
0.235,
0.235,
0.235,
0.235,
0.118,
0.059,
0.059,
0.059) * c(0.000,
0.364,
0.187,
1.438,
0.833,
0.500,
0.833,
0.250,
3.333,
0.125,
0.000,
0.000,
3.500)
df <- data.frame (nx =c(90,39 ,33 ,30 ,29 ,27 ,16 ,8 ,5 ,5 ,3 ,2 ,12),
mx = c(0.0 , 0.051, 0.667, 1.500, 0.655, 5.500, 0.687, 0.0 , 0.000 , 2.200 , 0.0 , 0.0 , 0))
df
df <- mutate(df, lx = nx/90)
df
df <- mutate(df, lx = nx/90,
lxmx = lx*mx)
df
sum(df$lxmx)
c(1.000,
0.529,
0.294,
0.294,
0.235,
0.235,
0.235,
0.235,
0.235,
0.118,
0.059,
0.059,
0.059) * c(0.000,
0.364,
0.187,
1.438,
0.833,
0.500,
0.833,
0.250,
3.333,
0.125,
0.000,
0.000,
3.500) |> sum()
s <- c(1.000,
0.529,
0.294,
0.294,
0.235,
0.235,
0.235,
0.235,
0.235,
0.118,
0.059,
0.059,
0.059) * c(0.000,
0.364,
0.187,
1.438,
0.833,
0.500,
0.833,
0.250,
3.333,
0.125,
0.000,
0.000,
3.500)
s
sum(s)
s.length()
length(s)
(s * 0:13)
(s * 0:12)
sum(s * 0:12)/sum(s)
sum(df$lxmx * 0:11)/sum(df$lxmx)
sum(df$lxmx * 0:12)/sum(df$lxmx)
c(0.000, 0.364, 0.187, 1.438, 0.833, 0.500, 0.833, 0.250, 3.333, 0.125, 0.000, 0.000, 3.500) * 0:12
(c(0.000, 0.364, 0.187, 1.438, 0.833, 0.500, 0.833, 0.250, 3.333, 0.125, 0.000, 0.000, 3.500) * 0:12)/13
(c(0.000, 0.364, 0.187, 1.438, 0.833, 0.500, 0.833, 0.250, 3.333, 0.125, 0.000, 0.000, 3.500) * 0:12) |> sum()/13
5.977 + 4.505
(5.977 + 4.505)/2
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
dbDisconnect(db)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
install.packages("sqldf")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
db <- dbConnect(SQLite(), "MediaDB.db")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * invoice_items")
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * invoice_items")
getwd()
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * invoice_items")
db <- dbConnect(SQLite(), "MediaDB.db")
df
db
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# rs$ExtPrice = rs$
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# rs$ExtPrice = rs$
rs
colnames(rs)
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
rs$ExtPrice = rs$Quantity * rs$UnitPrice
mean(rs$ExtPrice) |>
round(2)
average(rs$quantity)
mean(rs$Quantity)
mean(rs$UnitPrice)
dbGetQuery(db,
"SELECT SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
dbGetQuery(db,
"SELECT SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
dbGetQuery(rs,
"SELECT SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
sqldf("SELECT SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
ifelse(c(TRUE, FALSE, TRUE), 1, 2)
ifelse(c(TRUE, FALSE, TRUE), 9, 10)
discountMultiplier <- ifelse(total_invoice$totalAmount > 5, .9, 1)
discountMultiplier
# creating list of discount multiplier for each item
discountMultiplier <- ifelse(total_invoice$totalAmount > 5, .9, 1)
sqldf("ALTER TABLE rs
ADD DiscPrice")
sqldf("UPDATE rs
SET DiscPrice = ExtPrice * discountMultiplier")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
discountMultiplier2 <- total_invoice$totalAmount |>
lapply(function(x) ifelse(x > 5, .9, .1))
identical(discountMultiplier, discountMultiplier2)
discountMultiplier == discountMultiplier2
discountMultiplier2
discountMultiplier2 <- total_invoice$totalAmount |>
apply(function(x) ifelse(x > 5, .9, .1))
discountMultiplier2 <- total_invoice$totalAmount |>
apply(function(x) ifelse(x > 5, .9, .1))
discountMultiplier2 <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9, .1))
discountMultiplier2
discountMultiplier == discountMultiplier2
discountMultiplier2
discountMultiplier2 <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9, .1))
discountMultiplier = discountMultiplier2
dm <- ifelse(total_invoice$totalAmount > 5, .9, 1)
dm
discountMultiplier2 <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9, .1))
discountMultiplier2 == dm
discountMultiplier2
dm2 <- total_invoice$totalAmount > 5
dm2
discountMultiplier2
head(total_invoice$totalAmount)
head(total_invoice$totalAmount) |> sapply(function(x) ifelse(x > 5, .9, 1))
ifelse(head(total_invoice$totalAmount), .9, 1)
discountMultiplier2 <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
discountMultiplier2
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
# I confirmed with a TA that the "invoices table" is the Invoices table within MariaDB
# creating list of discount multiplier for each item
discountMultiplier <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
sqldf("UPDATE rs
SET DiscPrice = discountMultiplier")
# Adding discounted price vector to total_invoice table
total_invoice$DiscPrice <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
total_invoice
head(total_invoice)
sqldf("ALTER TABLE total_invoice
ADD test INT")
sqldf("ALTER TABLE total_invoice
ADD test integer")
total_invoice
head(total_invoice)
testdb <- data.frame(col1 = c(1, 2, 3, 4, 5),
col2 = c(6, 7, 8, 9, 0))
sqldf("ALTER TABLE testdb
ADD test integer")
testdb
dbSendQuery(db, "SELECT * FROM temp_discprice")
# Retrieving invoices table
dbSendQuery("SELECT * FROM invoices")
# Retrieving invoices table
dbSendQuery(db, "SELECT * FROM invoices")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
# Retrieving invoices table
dbSendQuery(db, "SELECT * FROM invoices")
db
# Retrieving invoices table
dbSendQuery(db, "SELECT * FROM invoices")
# Retrieving invoices table
dbGetQuery(db, "SELECT * FROM invoices")
# Retrieving invoices table
dbGetQuery(db, "SELECT * FROM invoices", n = -1)
dbWriteTable(db, "invoices", invoices, overwrite = TRUE)
# Retrieving invoices table
invoices <- dbGetQuery(db, "SELECT * FROM invoices", n = -1)
dbWriteTable(db, "invoices", invoices, overwrite = TRUE)
dbGetQuery(db, "SELECT * FROM invoices", n = -1)
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(
"SELECT in.*, t.DiscPrice
FROM invoices in INNER JOIN total_invoice t ON (in.InvoiceId = t.InvoiceId)"
)
# Retrieving invoices table
invoices <- dbGetQuery(db, "SELECT * FROM invoices", n = -1)
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(
"SELECT in.*, t.DiscPrice
FROM invoices in INNER JOIN total_invoice t ON (in.InvoiceId = t.InvoiceId)"
)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
# Adding discounted price vector to total_invoice table
total_invoice$DiscPrice <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
# Retrieving invoices table
invoices <- dbGetQuery(db, "SELECT * FROM invoices", n = -1)
invoices
head(invoices)
head(total_invoice)
# Adding discounted price vector to total_invoice table
total_invoice$DiscPrice <- total_invoice$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
# Retrieving invoices table
invoices <- dbGetQuery(db, "SELECT * FROM invoices", n = -1)
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(paste0(
"SELECT in.*, t.DiscPrice ",
"FROM invoices in INNER JOIN total_invoice t ON (in.InvoiceId = t.InvoiceId)"
))
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(
"SELECT in.*, t.DiscPrice FROM invoices in INNER JOIN total_invoice t ON (in.InvoiceId = t.InvoiceId)")
invoices
total_invoices
total_invoice
sqldf(
"SELECT in.*, t.DiscPrice FROM invoices i INNER JOIN total_invoice t ON (i.InvoiceId = t.InvoiceId)")
sqldf(
"SELECT i.*, t.DiscPrice FROM invoices i INNER JOIN total_invoice t ON (i.InvoiceId = t.InvoiceId)")
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(paste0(
"SELECT i.*, t.DiscPrice ",
"FROM invoices i INNER JOIN total_invoice t ON (i.InvoiceId = t.InvoiceId)"))
invoices
head(invoices)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
total_invoice <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = total_invoice$numItems,
y = total_invoice$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
dbGetQuery(db, "SELECT * FROM invoices")
totals <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = totals$numItems,
y = totals$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
rs <- dbGetQuery(db, "SELECT * FROM invoice_items")
# adding new column
rs$ExtPrice = rs$Quantity * rs$UnitPrice
#finding mean and rounding
mean(rs$ExtPrice) |>
round(2)
totals <- sqldf("SELECT Invoiceid, SUM(ExtPrice) as totalAmount, COUNT(*) as numItems
FROM rs
GROUP BY InvoiceId")
total_invoice
plot(x = totals$numItems,
y = totals$totalAmount,
xlab = "Total number of items",
ylab = "Total exit price")
# Adding discounted price vector to total_invoice table
totals$DiscPrice <- totals$totalAmount |>
sapply(function(x) ifelse(x > 5, .9 * x, x))
# Retrieving invoices table
invoices <- dbGetQuery(db, "SELECT * FROM invoices", n = -1)
# using sqldf to merge the DiscPrice to Invoices
invoices <- sqldf(
"SELECT i.*, t.DiscPrice
FROM invoices i INNER JOIN totals t ON (i.InvoiceId = t.InvoiceId)")
head(invoices)
# overwriting original invoices table with new information
dbWriteTable(db, "invoices", invoices, overwrite = TRUE)
dbGetQuery("SELECT * FROM invoices LIMIT 10")
dbGetQuery(db, "SELECT * FROM invoices LIMIT 10")
dbGetQuery(db, "SELECT InvoiceId, Total, DiscPrice FROM invoices LIMIT 10")
suppressMessages(
library(RSQLite)
library(sqldf)
library(RSQLite)
library(sqldf)
db <- dbConnect(SQLite(), "MediaDB.db")
invoices
totals
head(totals)
